- hosts: all
  become: true
  become_method: sudo
  gather_facts: true
  force_handlers: true

  pre_tasks:
    - name: verify boot mode
      stat: path=/sys/firmware/efi/efivars
      register: efi
      when: boot_manager is undefined
      tags: grub,systemd-boot,mkinitcpio,dm-crypt

    - name: set boot_manager
      set_fact:
        boot_manager="{{ 'systemd-boot' if efi.stat.exists and
        not boot_encryption.enabled | default(false) else 'grub' }}"
      when: boot_manager is undefined
      tags: grub,systemd-boot,mkinitcpio,dm-crypt

  roles:
    # Core-installation
    - AsavarTzeth.sys-config
    - AsavarTzeth.hosts
    - root
    - { role: fstab, when: fstab.enabled | default(true) }
    - reflector
    - { role: systemd-boot, when: boot_manager == 'systemd-boot' }
    - { role: AsavarTzeth.grub, when: boot_manager == 'grub' }
    - mkinitcpio
    # Post-installation
    - AsavarTzeth.users
    - systemd-timesyncd
    - pacman
    - networkmanager
    - pulseaudio
    - driver-gpu
    - AsavarTzeth.gnome
    # Desktop & user preferences
    - { role: gnupg, when: yubikey.enabled | default(false) }
    - openvpn
    - user-packages
    # ansible-makepkg uses env var SUDO_USER when it drops to unprivileged user
    # this breaks when the true ansible_user is root (when running live install)
    - role: AsavarTzeth.aur
      when:
        - ansible_env.SUDO_USER is defined
        - ansible_env.SUDO_USER != 'root'
        - aur.enabled | default(false)
      tags: aur
    - gsettings
    - { role: hidpi, when: hidpi.enabled | default(false) }
    - { role: menu, when: menu.enabled | default(false) }
